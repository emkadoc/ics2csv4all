name: build
on: [push]
env:
  project: ics2csv4all
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    name: build & release ics2csv4all ${{ matrix.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: write     
    strategy:
      fail-fast: false
    env:
      artifact_windows: x86_64-pc-windows-gnu
      artifact_linux: x86_64-unknown-linux-musl        
    steps:
    - name: checkout
      uses: actions/checkout@v4.2.1
    - name: compile for x86_64-pc-windows-gnu
      id: compile_windows
      uses: rust-build/rust-build.action@v1.4.5
      with:
        RUSTTARGET: x86_64-pc-windows-gnu
        EXTRA_FILES: "README.md LICENSE"
    - name: upload build artifact ${{ env.project }}-${{ env.artifact_windows }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.project }}-${{ env.artifact_windows }}
        path: |
          ${{ steps.compile_windows.outputs.BUILT_ARCHIVE }}
          ${{ steps.compile_windows.outputs.BUILT_CHECKSUM }}
    - name: compile for ${{ env.artifact_linux }}
      id: compile_linux
      uses: rust-build/rust-build.action@v1.4.5
      with:
        RUSTTARGET: ${{ env.artifact_linux }}
        EXTRA_FILES: "README.md LICENSE"
    - name: upload build artifact ${{ env.project }}-${{ env.artifact_linux }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.project }}-${{ env.artifact_linux }}
        path: |
          ${{ steps.compile_linux.outputs.BUILT_ARCHIVE }}
          ${{ steps.compile_linux.outputs.BUILT_CHECKSUM }}          
    - name: release
      #if: github.ref_type == 'tag'
      id: create_release
      uses: actions/create-release@v1.1.4
      with:
        draft: false
        prerelease: false
        release_name: ics2csv4all ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        body_path: CHANGELOG.md
      continue-on-error: true                         
    - name: upload release asset ${{ env.project }}-${{ env.artifact_windows }}
      #if: github.ref_type == 'tag'
      uses: actions/upload-release-asset@v1.0.2                   
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path:  ${{ steps.compile_windows.outputs.BUILT_ARCHIVE }}
        asset_name: ${{ env.project }}-${{ env.artifact_windows }}
        asset_content_type: application/zip
    - name: upload release asset ${{ env.project }}-${{ env.artifact_linux }}
      #if: github.ref_type == 'tag'
      uses: actions/upload-release-asset@v1.0.2                   
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path:  ${{ steps.compile_windows.outputs.BUILT_ARCHIVE }}
        asset_name: ${{ env.project }}-${{ env.artifact_linux }}
        asset_content_type: application/zip          